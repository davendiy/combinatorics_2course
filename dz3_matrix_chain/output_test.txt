generated sequence of matrix has array of dimensions

                            [91, 164, 614, 928, 877, 206, 24, 8, 873,
                             782, 258, 333, 953, 279, 496, 546, 616,
                             72, 888, 506, 923, 415, 520, 456, 394, 402,
                             130, 198, 171, 17, 657, 801, 71, 221, 70, 50,
                             894, 809, 754, 25, 372, 52, 614, 658, 614,
                             139, 831, 907, 501, 744, 503, 40, 209, 567,
                             327, 778, 699, 419, 542, 116, 381, 353, 635, 273,
                             203, 484, 510, 645, 817, 970, 464, 14, 144, 647,
                             781, 518, 293, 347, 639, 389, 347, 554, 318, 920,
                             194, 21, 195, 613, 249, 282, 256, 680, 527, 878,
                             946, 63, 429, 298, 900, 861]

length of sequence: 100


=====================recursive method============================
maximum number of operations: 29207713460
time for multiplication with brackets: 2.6873340606689453
sequence with brackets: (a[0] * (a[1] * (a[2] * ((((a[3] * ((a[4] * (a[5] * (a[6] * a[7]))) * (a[8] * ((a[9] * a[10]) * a[11])))) * (((((((a[12] * a[13]) * a[14]) * a[15]) * (a[16] * a[17])) * (a[18] * a[19])) * ((((((((a[20] * a[21]) * a[22]) * a[23]) * a[24]) * ((a[25] * a[26]) * (a[27] * (a[28] * a[29])))) * a[30]) * ((a[31] * a[32]) * (a[33] * (a[34] * a[35])))) * (a[36] * (a[37] * (((a[38] * a[39]) * (a[40] * a[41])) * (a[42] * (a[43] * ((a[44] * a[45]) * (a[46] * ((a[47] * a[48]) * (((a[49] * ((a[50] * a[51]) * a[52])) * (a[53] * a[54])) * (a[55] * ((a[56] * a[57]) * (((a[58] * a[59]) * (a[60] * a[61])) * ((a[62] * (a[63] * a[64])) * (a[65] * (a[66] * (a[67] * a[68])))))))))))))))))) * ((((a[69] * ((a[70] * a[71]) * a[72])) * a[73]) * ((a[74] * ((a[75] * a[76]) * a[77])) * ((a[78] * (a[79] * a[80])) * (a[81] * a[82])))) * (((((a[83] * (a[84] * a[85])) * a[86]) * ((a[87] * a[88]) * (a[89] * a[90]))) * (a[91] * a[92])) * a[93])))) * ((a[94] * a[95]) * (a[96] * a[97]))) * a[98]))))


======================dynamic method=============================
maximum number of operations: 29207713460
time for multiplication with brackets: 2.486161470413208
sequence with brackets: (a[0] * (a[1] * (a[2] * ((((a[3] * ((a[4] * (a[5] * (a[6] * a[7]))) * (a[8] * ((a[9] * a[10]) * a[11])))) * (((((((a[12] * a[13]) * a[14]) * a[15]) * (a[16] * a[17])) * (a[18] * a[19])) * ((((((((a[20] * a[21]) * a[22]) * a[23]) * a[24]) * ((a[25] * a[26]) * (a[27] * (a[28] * a[29])))) * a[30]) * ((a[31] * a[32]) * (a[33] * (a[34] * a[35])))) * (a[36] * (a[37] * (((a[38] * a[39]) * (a[40] * a[41])) * (a[42] * (a[43] * ((a[44] * a[45]) * (a[46] * ((a[47] * a[48]) * (((a[49] * ((a[50] * a[51]) * a[52])) * (a[53] * a[54])) * (a[55] * ((a[56] * a[57]) * (((a[58] * a[59]) * (a[60] * a[61])) * ((a[62] * (a[63] * a[64])) * (a[65] * (a[66] * (a[67] * a[68])))))))))))))))))) * ((((a[69] * ((a[70] * a[71]) * a[72])) * a[73]) * ((a[74] * ((a[75] * a[76]) * a[77])) * ((a[78] * (a[79] * a[80])) * (a[81] * a[82])))) * (((((a[83] * (a[84] * a[85])) * a[86]) * ((a[87] * a[88]) * (a[89] * a[90]))) * (a[91] * a[92])) * a[93])))) * ((a[94] * a[95]) * (a[96] * a[97]))) * a[98]))))


==================direct multiplication===========================
time elapsed: 0.27950453758239746
